// Generated by view binder compiler. Do not edit!
package mx.edu.iton.potros.practica10.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import mx.edu.iton.potros.practica10.R;

public final class ItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView imgItem;

  @NonNull
  public final TextView itemDesc;

  @NonNull
  public final TextView itemPrice;

  @NonNull
  public final TextView productoNombre;

  private ItemBinding(@NonNull LinearLayout rootView, @NonNull ImageView imgItem,
      @NonNull TextView itemDesc, @NonNull TextView itemPrice, @NonNull TextView productoNombre) {
    this.rootView = rootView;
    this.imgItem = imgItem;
    this.itemDesc = itemDesc;
    this.itemPrice = itemPrice;
    this.productoNombre = productoNombre;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.img_item;
      ImageView imgItem = ViewBindings.findChildViewById(rootView, id);
      if (imgItem == null) {
        break missingId;
      }

      id = R.id.item_desc;
      TextView itemDesc = ViewBindings.findChildViewById(rootView, id);
      if (itemDesc == null) {
        break missingId;
      }

      id = R.id.item_price;
      TextView itemPrice = ViewBindings.findChildViewById(rootView, id);
      if (itemPrice == null) {
        break missingId;
      }

      id = R.id.producto_nombre;
      TextView productoNombre = ViewBindings.findChildViewById(rootView, id);
      if (productoNombre == null) {
        break missingId;
      }

      return new ItemBinding((LinearLayout) rootView, imgItem, itemDesc, itemPrice, productoNombre);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
